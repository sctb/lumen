{
  "version": 3,
  "sources": [
    "almond.js",
    "fs.js",
    "process.js",
    "path.js",
    "runtime.js",
    "macros.js",
    "reader.js",
    "compiler.js",
    "system.js",
    "main.js"
  ],
  "names": [],
  "mappingsjbA;AACA;AACA;AACA;AACA,ACJA;AACA;AACA;AACA;AACA,ACJA;AACA;AACA;AACA;AACA,ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3qpwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACx
  "file": "lumen.js",
  "sourcesContent": [
    "/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n",
    "\n;\ndefine(\"fs\", function(){});\n\n",
    "\n;\ndefine(\"process\", function(){});\n\n",
    "\n;\ndefine(\"path\", function(){});\n\n",
    "if (typeof define !== 'function') { var define = require('amdefine')(module) }\ndefine('runtime',['require'],function(require) {\nvar exports = {};\nenvironment = [{}];\ntarget = \"js\";\nnil63 = function (x) {\n  return(x === undefined || x === null);\n};\nis63 = function (x) {\n  return(! nil63(x));\n};\n_35 = function (x) {\n  return(x.length || 0);\n};\nnone63 = function (x) {\n  return(_35(x) === 0);\n};\nsome63 = function (x) {\n  return(_35(x) > 0);\n};\none63 = function (x) {\n  return(_35(x) === 1);\n};\ntwo63 = function (x) {\n  return(_35(x) === 2);\n};\nhd = function (l) {\n  return(l[0]);\n};\ntype = function (x) {\n  return(typeof(x));\n};\nstring63 = function (x) {\n  return(type(x) === \"string\");\n};\nnumber63 = function (x) {\n  return(type(x) === \"number\");\n};\nboolean63 = function (x) {\n  return(type(x) === \"boolean\");\n};\nfunction63 = function (x) {\n  return(type(x) === \"function\");\n};\natom63 = function (x) {\n  return(nil63(x) || string63(x) || number63(x) || boolean63(x));\n};\nnan = 0 / 0;\ninf = 1 / 0;\nnan63 = function (n) {\n  return(!( n === n));\n};\ninf63 = function (n) {\n  return(n === inf || n === -inf);\n};\nclip = function (s, from, upto) {\n  return(s.substring(from, upto));\n};\ncut = function (x, from, upto) {\n  var l = [];\n  var j = 0;\n  var _e;\n  if (nil63(from) || from < 0) {\n    _e = 0;\n  } else {\n    _e = from;\n  }\n  var i = _e;\n  var n = _35(x);\n  var _e1;\n  if (nil63(upto) || upto > n) {\n    _e1 = n;\n  } else {\n    _e1 = upto;\n  }\n  var _upto = _e1;\n  while (i < _upto) {\n    l[j] = x[i];\n    i = i + 1;\n    j = j + 1;\n  }\n  var _o = x;\n  var k = undefined;\n  for (k in _o) {\n    var v = _o[k];\n    var _e2;\n    if (numeric63(k)) {\n      _e2 = parseInt(k);\n    } else {\n      _e2 = k;\n    }\n    var _k = _e2;\n    if (! number63(_k)) {\n      l[_k] = v;\n    }\n  }\n  return(l);\n};\nkeys = function (x) {\n  var t = [];\n  var _o1 = x;\n  var k = undefined;\n  for (k in _o1) {\n    var v = _o1[k];\n    var _e3;\n    if (numeric63(k)) {\n      _e3 = parseInt(k);\n    } else {\n      _e3 = k;\n    }\n    var _k1 = _e3;\n    if (! number63(_k1)) {\n      t[_k1] = v;\n    }\n  }\n  return(t);\n};\nedge = function (x) {\n  return(_35(x) - 1);\n};\ninner = function (x) {\n  return(clip(x, 1, edge(x)));\n};\ntl = function (l) {\n  return(cut(l, 1));\n};\nchar = function (s, n) {\n  return(s.charAt(n));\n};\ncode = function (s, n) {\n  return(s.charCodeAt(n));\n};\nstring_literal63 = function (x) {\n  return(string63(x) && char(x, 0) === \"\\\"\");\n};\nid_literal63 = function (x) {\n  return(string63(x) && char(x, 0) === \"|\");\n};\nadd = function (l, x) {\n  l.push(x);\n  return(undefined);\n};\ndrop = function (l) {\n  return(l.pop());\n};\nlast = function (l) {\n  return(l[edge(l)]);\n};\nalmost = function (l) {\n  return(cut(l, 0, edge(l)));\n};\nreverse = function (l) {\n  var l1 = keys(l);\n  var i = edge(l);\n  while (i >= 0) {\n    add(l1, l[i]);\n    i = i - 1;\n  }\n  return(l1);\n};\nreduce = function (f, x) {\n  if (none63(x)) {\n    return(x);\n  } else {\n    if (one63(x)) {\n      return(hd(x));\n    } else {\n      return(f(hd(x), reduce(f, tl(x))));\n    }\n  }\n};\njoin = function () {\n  var ls = unstash(Array.prototype.slice.call(arguments, 0));\n  if (two63(ls)) {\n    var _id = ls;\n    var a = _id[0];\n    var b = _id[1];\n    if (a && b) {\n      var c = [];\n      var o = _35(a);\n      var _o2 = a;\n      var k = undefined;\n      for (k in _o2) {\n        var v = _o2[k];\n        var _e4;\n        if (numeric63(k)) {\n          _e4 = parseInt(k);\n        } else {\n          _e4 = k;\n        }\n        var _k2 = _e4;\n        c[_k2] = v;\n      }\n      var _o3 = b;\n      var k = undefined;\n      for (k in _o3) {\n        var v = _o3[k];\n        var _e5;\n        if (numeric63(k)) {\n          _e5 = parseInt(k);\n        } else {\n          _e5 = k;\n        }\n        var _k3 = _e5;\n        if (number63(_k3)) {\n          _k3 = _k3 + o;\n        }\n        c[_k3] = v;\n      }\n      return(c);\n    } else {\n      return(a || b || []);\n    }\n  } else {\n    return(reduce(join, ls));\n  }\n};\nfind = function (f, t) {\n  var _o4 = t;\n  var _i4 = undefined;\n  for (_i4 in _o4) {\n    var x = _o4[_i4];\n    var _e6;\n    if (numeric63(_i4)) {\n      _e6 = parseInt(_i4);\n    } else {\n      _e6 = _i4;\n    }\n    var __i4 = _e6;\n    var y = f(x);\n    if (y) {\n      return(y);\n    }\n  }\n};\nfirst = function (f, l) {\n  var _x1 = l;\n  var _n5 = _35(_x1);\n  var _i5 = 0;\n  while (_i5 < _n5) {\n    var x = _x1[_i5];\n    var y = f(x);\n    if (y) {\n      return(y);\n    }\n    _i5 = _i5 + 1;\n  }\n};\nin63 = function (x, t) {\n  return(find(function (y) {\n    return(x === y);\n  }, t));\n};\npair = function (l) {\n  var l1 = [];\n  var i = 0;\n  while (i < _35(l)) {\n    add(l1, [l[i], l[i + 1]]);\n    i = i + 1;\n    i = i + 1;\n  }\n  return(l1);\n};\nsort = function (l, f) {\n  var _e7;\n  if (f) {\n    _e7 = function (a, b) {\n      if (f(a, b)) {\n        return(-1);\n      } else {\n        return(1);\n      }\n    };\n  }\n  return(l.sort(_e7));\n};\nmap = function (f, x) {\n  var t = [];\n  var _x3 = x;\n  var _n6 = _35(_x3);\n  var _i6 = 0;\n  while (_i6 < _n6) {\n    var v = _x3[_i6];\n    var y = f(v);\n    if (is63(y)) {\n      add(t, y);\n    }\n    _i6 = _i6 + 1;\n  }\n  var _o5 = x;\n  var k = undefined;\n  for (k in _o5) {\n    var v = _o5[k];\n    var _e8;\n    if (numeric63(k)) {\n      _e8 = parseInt(k);\n    } else {\n      _e8 = k;\n    }\n    var _k4 = _e8;\n    if (! number63(_k4)) {\n      var y = f(v);\n      if (is63(y)) {\n        t[_k4] = y;\n      }\n    }\n  }\n  return(t);\n};\nkeep = function (f, x) {\n  return(map(function (v) {\n    if (f(v)) {\n      return(v);\n    }\n  }, x));\n};\nkeys63 = function (t) {\n  var _o6 = t;\n  var k = undefined;\n  for (k in _o6) {\n    var v = _o6[k];\n    var _e9;\n    if (numeric63(k)) {\n      _e9 = parseInt(k);\n    } else {\n      _e9 = k;\n    }\n    var _k5 = _e9;\n    if (! number63(_k5)) {\n      return(true);\n    }\n  }\n  return(false);\n};\nempty63 = function (t) {\n  var _o7 = t;\n  var _i9 = undefined;\n  for (_i9 in _o7) {\n    var x = _o7[_i9];\n    var _e10;\n    if (numeric63(_i9)) {\n      _e10 = parseInt(_i9);\n    } else {\n      _e10 = _i9;\n    }\n    var __i9 = _e10;\n    return(false);\n  }\n  return(true);\n};\nstash = function (args) {\n  if (keys63(args)) {\n    var p = [];\n    var _o8 = args;\n    var k = undefined;\n    for (k in _o8) {\n      var v = _o8[k];\n      var _e11;\n      if (numeric63(k)) {\n        _e11 = parseInt(k);\n      } else {\n        _e11 = k;\n      }\n      var _k6 = _e11;\n      if (! number63(_k6)) {\n        p[_k6] = v;\n      }\n    }\n    p._stash = true;\n    add(args, p);\n  }\n  return(args);\n};\nunstash = function (args) {\n  if (none63(args)) {\n    return([]);\n  } else {\n    var l = last(args);\n    if (! atom63(l) && l._stash) {\n      var args1 = almost(args);\n      var _o9 = l;\n      var k = undefined;\n      for (k in _o9) {\n        var v = _o9[k];\n        var _e12;\n        if (numeric63(k)) {\n          _e12 = parseInt(k);\n        } else {\n          _e12 = k;\n        }\n        var _k7 = _e12;\n        if (!( _k7 === \"_stash\")) {\n          args1[_k7] = v;\n        }\n      }\n      return(args1);\n    } else {\n      return(args);\n    }\n  }\n};\nsearch = function (s, pattern, start) {\n  var i = s.indexOf(pattern, start);\n  if (i >= 0) {\n    return(i);\n  }\n};\nsplit = function (s, sep) {\n  if (s === \"\" || sep === \"\") {\n    return([]);\n  } else {\n    var l = [];\n    var n = _35(sep);\n    while (true) {\n      var i = search(s, sep);\n      if (nil63(i)) {\n        break;\n      } else {\n        add(l, clip(s, 0, i));\n        s = clip(s, i + n);\n      }\n    }\n    add(l, s);\n    return(l);\n  }\n};\ncat = function () {\n  var xs = unstash(Array.prototype.slice.call(arguments, 0));\n  if (none63(xs)) {\n    return(\"\");\n  } else {\n    return(reduce(function (a, b) {\n      return(a + b);\n    }, xs));\n  }\n};\n_43 = function () {\n  var xs = unstash(Array.prototype.slice.call(arguments, 0));\n  return(reduce(function (a, b) {\n    return(a + b);\n  }, xs));\n};\n_ = function () {\n  var xs = unstash(Array.prototype.slice.call(arguments, 0));\n  return(reduce(function (b, a) {\n    return(a - b);\n  }, reverse(xs)));\n};\n_42 = function () {\n  var xs = unstash(Array.prototype.slice.call(arguments, 0));\n  return(reduce(function (a, b) {\n    return(a * b);\n  }, xs));\n};\n_47 = function () {\n  var xs = unstash(Array.prototype.slice.call(arguments, 0));\n  return(reduce(function (b, a) {\n    return(a / b);\n  }, reverse(xs)));\n};\n_37 = function () {\n  var xs = unstash(Array.prototype.slice.call(arguments, 0));\n  return(reduce(function (b, a) {\n    return(a % b);\n  }, reverse(xs)));\n};\n_62 = function (a, b) {\n  return(a > b);\n};\n_60 = function (a, b) {\n  return(a < b);\n};\n_61 = function (a, b) {\n  return(a === b);\n};\n_6261 = function (a, b) {\n  return(a >= b);\n};\n_6061 = function (a, b) {\n  return(a <= b);\n};\nnumber = function (s) {\n  var n = parseFloat(s);\n  if (! isNaN(n)) {\n    return(n);\n  }\n};\nnumber_code63 = function (n) {\n  return(n > 47 && n < 58);\n};\nnumeric63 = function (s) {\n  var n = _35(s);\n  var i = 0;\n  while (i < n) {\n    if (! number_code63(code(s, i))) {\n      return(false);\n    }\n    i = i + 1;\n  }\n  return(true);\n};\nvar tostring = function (x) {\n  return(x.toString());\n};\nescape = function (s) {\n  var s1 = \"\\\"\";\n  var i = 0;\n  while (i < _35(s)) {\n    var c = char(s, i);\n    var _e13;\n    if (c === \"\\n\") {\n      _e13 = \"\\\\n\";\n    } else {\n      var _e14;\n      if (c === \"\\\"\") {\n        _e14 = \"\\\\\\\"\";\n      } else {\n        var _e15;\n        if (c === \"\\\\\") {\n          _e15 = \"\\\\\\\\\";\n        } else {\n          _e15 = c;\n        }\n        _e14 = _e15;\n      }\n      _e13 = _e14;\n    }\n    var c1 = _e13;\n    s1 = s1 + c1;\n    i = i + 1;\n  }\n  return(s1 + \"\\\"\");\n};\nstr = function (x, depth) {\n  if (depth && depth > 40) {\n    return(\"circular\");\n  } else {\n    if (nil63(x)) {\n      return(\"nil\");\n    } else {\n      if (nan63(x)) {\n        return(\"nan\");\n      } else {\n        if (x === inf) {\n          return(\"inf\");\n        } else {\n          if (x === -inf) {\n            return(\"-inf\");\n          } else {\n            if (boolean63(x)) {\n              if (x) {\n                return(\"true\");\n              } else {\n                return(\"false\");\n              }\n            } else {\n              if (string63(x)) {\n                return(escape(x));\n              } else {\n                if (atom63(x)) {\n                  return(tostring(x));\n                } else {\n                  if (function63(x)) {\n                    return(\"function\");\n                  } else {\n                    var s = \"(\";\n                    var sp = \"\";\n                    var xs = [];\n                    var ks = [];\n                    var d = (depth || 0) + 1;\n                    var _o10 = x;\n                    var k = undefined;\n                    for (k in _o10) {\n                      var v = _o10[k];\n                      var _e16;\n                      if (numeric63(k)) {\n                        _e16 = parseInt(k);\n                      } else {\n                        _e16 = k;\n                      }\n                      var _k8 = _e16;\n                      if (number63(_k8)) {\n                        xs[_k8] = str(v, d);\n                      } else {\n                        add(ks, _k8 + \":\");\n                        add(ks, str(v, d));\n                      }\n                    }\n                    var _o11 = join(xs, ks);\n                    var _i13 = undefined;\n                    for (_i13 in _o11) {\n                      var v = _o11[_i13];\n                      var _e17;\n                      if (numeric63(_i13)) {\n                        _e17 = parseInt(_i13);\n                      } else {\n                        _e17 = _i13;\n                      }\n                      var __i13 = _e17;\n                      s = s + sp + v;\n                      sp = \" \";\n                    }\n                    return(s + \")\");\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\napply = function (f, args) {\n  var _args = stash(args);\n  return(f.apply(f, _args));\n};\ncall = function (f) {\n  return(f());\n};\ntoplevel63 = function () {\n  return(one63(environment));\n};\nsetenv = function (k) {\n  var _r68 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id1 = _r68;\n  var _keys = cut(_id1, 0);\n  if (string63(k)) {\n    var _e18;\n    if (_keys.toplevel) {\n      _e18 = hd(environment);\n    } else {\n      _e18 = last(environment);\n    }\n    var frame = _e18;\n    var entry = frame[k] || {};\n    var _o12 = _keys;\n    var _k9 = undefined;\n    for (_k9 in _o12) {\n      var v = _o12[_k9];\n      var _e19;\n      if (numeric63(_k9)) {\n        _e19 = parseInt(_k9);\n      } else {\n        _e19 = _k9;\n      }\n      var _k10 = _e19;\n      entry[_k10] = v;\n    }\n    frame[k] = entry;\n    return(frame[k]);\n  }\n};\nprint = function (x) {\n  return(console.log(x));\n};\nvar math = Math;\nabs = math.abs;\nacos = math.acos;\nasin = math.asin;\natan = math.atan;\natan2 = math.atan2;\nceil = math.ceil;\ncos = math.cos;\nfloor = math.floor;\nlog = math.log;\nlog10 = math.log10;\nmax = math.max;\nmin = math.min;\npow = math.pow;\nrandom = math.random;\nsin = math.sin;\nsinh = math.sinh;\nsqrt = math.sqrt;\ntan = math.tan;\ntanh = math.tanh;\nbrowser63 = !( typeof(window) === \"undefined\");\nif (browser63) {\n  global = window;\n}\nreturn exports;\n});\n\n",
    "if (typeof define !== 'function') { var define = require('amdefine')(module) }\ndefine('macros',['require'],function(require) {\nvar exports = {};\nsetenv(\"quote\", {_stash: true, macro: function (form) {\n  return(quoted(form));\n}});\nsetenv(\"quasiquote\", {_stash: true, macro: function (form) {\n  return(quasiexpand(form, 1));\n}});\nsetenv(\"at\", {_stash: true, macro: function (l, i) {\n  if (target === \"lua\" && number63(i)) {\n    i = i + 1;\n  } else {\n    if (target === \"lua\") {\n      i = [\"+\", i, 1];\n    }\n  }\n  return([\"get\", l, i]);\n}});\nsetenv(\"wipe\", {_stash: true, macro: function (place) {\n  if (target === \"lua\") {\n    return([\"set\", place, \"nil\"]);\n  } else {\n    return([\"%delete\", place]);\n  }\n}});\nsetenv(\"list\", {_stash: true, macro: function () {\n  var body = unstash(Array.prototype.slice.call(arguments, 0));\n  var x = unique(\"x\");\n  var l = [];\n  var forms = [];\n  var _o1 = body;\n  var k = undefined;\n  for (k in _o1) {\n    var v = _o1[k];\n    var _e3;\n    if (numeric63(k)) {\n      _e3 = parseInt(k);\n    } else {\n      _e3 = k;\n    }\n    var _k = _e3;\n    if (number63(_k)) {\n      l[_k] = v;\n    } else {\n      add(forms, [\"set\", [\"get\", x, [\"quote\", _k]], v]);\n    }\n  }\n  if (some63(forms)) {\n    return(join([\"let\", x, join([\"%array\"], l)], forms, [x]));\n  } else {\n    return(join([\"%array\"], l));\n  }\n}});\nsetenv(\"if\", {_stash: true, macro: function () {\n  var branches = unstash(Array.prototype.slice.call(arguments, 0));\n  return(hd(expand_if(branches)));\n}});\nsetenv(\"case\", {_stash: true, macro: function (x) {\n  var _r10 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id2 = _r10;\n  var clauses = cut(_id2, 0);\n  var bs = map(function (_x31) {\n    var _id3 = _x31;\n    var a = _id3[0];\n    var b = _id3[1];\n    if (nil63(b)) {\n      return([a]);\n    } else {\n      return([[\"=\", [\"quote\", a], x], b]);\n    }\n  }, pair(clauses));\n  return(join([\"if\"], apply(join, bs)));\n}});\nsetenv(\"when\", {_stash: true, macro: function (cond) {\n  var _r13 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id5 = _r13;\n  var body = cut(_id5, 0);\n  return([\"if\", cond, join([\"do\"], body)]);\n}});\nsetenv(\"unless\", {_stash: true, macro: function (cond) {\n  var _r15 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id7 = _r15;\n  var body = cut(_id7, 0);\n  return([\"if\", [\"not\", cond], join([\"do\"], body)]);\n}});\nsetenv(\"obj\", {_stash: true, macro: function () {\n  var body = unstash(Array.prototype.slice.call(arguments, 0));\n  return(join([\"%object\"], mapo(function (x) {\n    return(x);\n  }, body)));\n}});\nsetenv(\"let\", {_stash: true, macro: function (bs) {\n  var _r19 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id11 = _r19;\n  var body = cut(_id11, 0);\n  if (atom63(bs)) {\n    return(join([\"let\", [bs, hd(body)]], tl(body)));\n  } else {\n    if (none63(bs)) {\n      return(join([\"do\"], body));\n    } else {\n      var _id12 = bs;\n      var lh = _id12[0];\n      var rh = _id12[1];\n      var bs2 = cut(_id12, 2);\n      var _id13 = bind(lh, rh);\n      var id = _id13[0];\n      var val = _id13[1];\n      var bs1 = cut(_id13, 2);\n      var renames = [];\n      if (bound63(id) || toplevel63()) {\n        var id1 = unique(id);\n        renames = [id, id1];\n        id = id1;\n      } else {\n        setenv(id, {_stash: true, variable: true});\n      }\n      return([\"do\", [\"%local\", id, val], [\"let-symbol\", renames, join([\"let\", join(bs1, bs2)], body)]]);\n    }\n  }\n}});\nsetenv(\"with\", {_stash: true, macro: function (x, v) {\n  var _r21 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id15 = _r21;\n  var body = cut(_id15, 0);\n  return(join([\"let\", [x, v]], body, [x]));\n}});\nsetenv(\"let-when\", {_stash: true, macro: function (x, v) {\n  var _r23 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id17 = _r23;\n  var body = cut(_id17, 0);\n  var y = unique(\"y\");\n  return([\"let\", y, v, [\"when\", y, join([\"let\", [x, y]], body)]]);\n}});\nsetenv(\"define-macro\", {_stash: true, macro: function (name, args) {\n  var _r25 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id19 = _r25;\n  var body = cut(_id19, 0);\n  var _x89 = [\"setenv\", [\"quote\", name]];\n  _x89.macro = join([\"fn\", args], body);\n  var form = _x89;\n  eval(form);\n  return(form);\n}});\nsetenv(\"define-special\", {_stash: true, macro: function (name, args) {\n  var _r27 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id21 = _r27;\n  var body = cut(_id21, 0);\n  var _x96 = [\"setenv\", [\"quote\", name]];\n  _x96.special = join([\"fn\", args], body);\n  var form = join(_x96, keys(body));\n  eval(form);\n  return(form);\n}});\nsetenv(\"define-symbol\", {_stash: true, macro: function (name, expansion) {\n  setenv(name, {_stash: true, symbol: expansion});\n  var _x102 = [\"setenv\", [\"quote\", name]];\n  _x102.symbol = [\"quote\", expansion];\n  return(_x102);\n}});\nsetenv(\"define-reader\", {_stash: true, macro: function (_x111) {\n  var _id24 = _x111;\n  var char = _id24[0];\n  var s = _id24[1];\n  var _r31 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id25 = _r31;\n  var body = cut(_id25, 0);\n  return([\"set\", [\"get\", \"read-table\", char], join([\"fn\", [s]], body)]);\n}});\nsetenv(\"define\", {_stash: true, macro: function (name, x) {\n  var _r33 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id27 = _r33;\n  var body = cut(_id27, 0);\n  setenv(name, {_stash: true, variable: true});\n  if (some63(body)) {\n    return(join([\"%local-function\", name], bind42(x, body)));\n  } else {\n    return([\"%local\", name, x]);\n  }\n}});\nsetenv(\"define-global\", {_stash: true, macro: function (name, x) {\n  var _r35 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id29 = _r35;\n  var body = cut(_id29, 0);\n  setenv(name, {_stash: true, toplevel: true, variable: true});\n  if (some63(body)) {\n    return(join([\"%global-function\", name], bind42(x, body)));\n  } else {\n    return([\"set\", name, x]);\n  }\n}});\nsetenv(\"with-frame\", {_stash: true, macro: function () {\n  var body = unstash(Array.prototype.slice.call(arguments, 0));\n  var x = unique(\"x\");\n  return([\"do\", [\"add\", \"environment\", [\"obj\"]], [\"with\", x, join([\"do\"], body), [\"drop\", \"environment\"]]]);\n}});\nsetenv(\"with-bindings\", {_stash: true, macro: function (_x144) {\n  var _id32 = _x144;\n  var names = _id32[0];\n  var _r37 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id33 = _r37;\n  var body = cut(_id33, 0);\n  var x = unique(\"x\");\n  var _x147 = [\"setenv\", x];\n  _x147.variable = true;\n  return(join([\"with-frame\", [\"each\", x, names, _x147]], body));\n}});\nsetenv(\"let-macro\", {_stash: true, macro: function (definitions) {\n  var _r40 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id35 = _r40;\n  var body = cut(_id35, 0);\n  add(environment, {});\n  map(function (m) {\n    return(macroexpand(join([\"define-macro\"], m)));\n  }, definitions);\n  var _x152 = join([\"do\"], macroexpand(body));\n  drop(environment);\n  return(_x152);\n}});\nsetenv(\"let-symbol\", {_stash: true, macro: function (expansions) {\n  var _r44 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id38 = _r44;\n  var body = cut(_id38, 0);\n  add(environment, {});\n  map(function (_x161) {\n    var _id39 = _x161;\n    var name = _id39[0];\n    var exp = _id39[1];\n    return(macroexpand([\"define-symbol\", name, exp]));\n  }, pair(expansions));\n  var _x160 = join([\"do\"], macroexpand(body));\n  drop(environment);\n  return(_x160);\n}});\nsetenv(\"let-unique\", {_stash: true, macro: function (names) {\n  var _r48 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id41 = _r48;\n  var body = cut(_id41, 0);\n  var bs = map(function (n) {\n    return([n, [\"unique\", [\"quote\", n]]]);\n  }, names);\n  return(join([\"let\", apply(join, bs)], body));\n}});\nsetenv(\"fn\", {_stash: true, macro: function (args) {\n  var _r51 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id43 = _r51;\n  var body = cut(_id43, 0);\n  return(join([\"%function\"], bind42(args, body)));\n}});\nsetenv(\"guard\", {_stash: true, macro: function (expr) {\n  if (target === \"js\") {\n    return([[\"fn\", join(), [\"%try\", [\"list\", true, expr]]]]);\n  } else {\n    var x = unique(\"x\");\n    var msg = unique(\"msg\");\n    var trace = unique(\"trace\");\n    return([\"let\", [x, \"nil\", msg, \"nil\", trace, \"nil\"], [\"if\", [\"xpcall\", [\"fn\", join(), [\"set\", x, expr]], [\"fn\", [\"m\"], [\"set\", msg, [\"clip\", \"m\", [\"+\", [\"search\", \"m\", \"\\\": \\\"\"], 2]]], [\"set\", trace, [[\"get\", \"debug\", [\"quote\", \"traceback\"]]]]]], [\"list\", true, x], [\"list\", false, msg, trace]]]);\n  }\n}});\nsetenv(\"each\", {_stash: true, macro: function (x, t) {\n  var _r55 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id46 = _r55;\n  var body = cut(_id46, 0);\n  var o = unique(\"o\");\n  var n = unique(\"n\");\n  var i = unique(\"i\");\n  var _e4;\n  if (atom63(x)) {\n    _e4 = [i, x];\n  } else {\n    var _e5;\n    if (_35(x) > 1) {\n      _e5 = x;\n    } else {\n      _e5 = [i, hd(x)];\n    }\n    _e4 = _e5;\n  }\n  var _id47 = _e4;\n  var k = _id47[0];\n  var v = _id47[1];\n  var _e6;\n  if (target === \"lua\") {\n    _e6 = body;\n  } else {\n    _e6 = [join([\"let\", k, [\"if\", [\"numeric?\", k], [\"parseInt\", k], k]], body)];\n  }\n  return([\"let\", [o, t, k, \"nil\"], [\"%for\", o, k, join([\"let\", [v, [\"get\", o, k]]], _e6)]]);\n}});\nsetenv(\"for\", {_stash: true, macro: function (i, to) {\n  var _r57 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id49 = _r57;\n  var body = cut(_id49, 0);\n  return([\"let\", i, 0, join([\"while\", [\"<\", i, to]], body, [[\"inc\", i]])]);\n}});\nsetenv(\"step\", {_stash: true, macro: function (v, t) {\n  var _r59 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id51 = _r59;\n  var body = cut(_id51, 0);\n  var x = unique(\"x\");\n  var n = unique(\"n\");\n  var i = unique(\"i\");\n  return([\"let\", [x, t, n, [\"#\", x]], [\"for\", i, n, join([\"let\", [v, [\"at\", x, i]]], body)]]);\n}});\nsetenv(\"set-of\", {_stash: true, macro: function () {\n  var xs = unstash(Array.prototype.slice.call(arguments, 0));\n  var l = [];\n  var _o3 = xs;\n  var _i3 = undefined;\n  for (_i3 in _o3) {\n    var x = _o3[_i3];\n    var _e7;\n    if (numeric63(_i3)) {\n      _e7 = parseInt(_i3);\n    } else {\n      _e7 = _i3;\n    }\n    var __i3 = _e7;\n    l[x] = true;\n  }\n  return(join([\"obj\"], l));\n}});\nsetenv(\"language\", {_stash: true, macro: function () {\n  return([\"quote\", target]);\n}});\nsetenv(\"target\", {_stash: true, macro: function () {\n  var clauses = unstash(Array.prototype.slice.call(arguments, 0));\n  return(clauses[target]);\n}});\nsetenv(\"join!\", {_stash: true, macro: function (a) {\n  var _r63 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id53 = _r63;\n  var bs = cut(_id53, 0);\n  return([\"set\", a, join([\"join\", a], bs)]);\n}});\nsetenv(\"cat!\", {_stash: true, macro: function (a) {\n  var _r65 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id55 = _r65;\n  var bs = cut(_id55, 0);\n  return([\"set\", a, join([\"cat\", a], bs)]);\n}});\nsetenv(\"inc\", {_stash: true, macro: function (n, by) {\n  return([\"set\", n, [\"+\", n, by || 1]]);\n}});\nsetenv(\"dec\", {_stash: true, macro: function (n, by) {\n  return([\"set\", n, [\"-\", n, by || 1]]);\n}});\nsetenv(\"with-indent\", {_stash: true, macro: function (form) {\n  var x = unique(\"x\");\n  return([\"do\", [\"inc\", \"indent-level\"], [\"with\", x, form, [\"dec\", \"indent-level\"]]]);\n}});\nsetenv(\"export\", {_stash: true, macro: function () {\n  var names = unstash(Array.prototype.slice.call(arguments, 0));\n  if (target === \"js\") {\n    return(join([\"do\"], map(function (k) {\n      return([\"set\", [\"get\", \"exports\", [\"quote\", k]], k]);\n    }, names)));\n  } else {\n    var x = {};\n    var _o5 = names;\n    var _i5 = undefined;\n    for (_i5 in _o5) {\n      var k = _o5[_i5];\n      var _e8;\n      if (numeric63(_i5)) {\n        _e8 = parseInt(_i5);\n      } else {\n        _e8 = _i5;\n      }\n      var __i5 = _e8;\n      x[k] = k;\n    }\n    return([\"return\", join([\"obj\"], x)]);\n  }\n}});\nreturn exports;\n});\n\n",
    "if (typeof define !== 'function') { var define = require('amdefine')(module) }\ndefine('reader',['require'],function(require) {\nvar exports = {};\nvar delimiters = {\"\\n\": true, \";\": true, \"(\": true, \")\": true};\nvar whitespace = {\" \": true, \"\\t\": true, \"\\n\": true};\nvar stream = function (str, more) {\n  return({more: more, pos: 0, len: _35(str), string: str});\n};\nvar peek_char = function (s) {\n  var _id = s;\n  var pos = _id.pos;\n  var len = _id.len;\n  var string = _id.string;\n  if (pos < len) {\n    return(char(string, pos));\n  }\n};\nvar read_char = function (s) {\n  var c = peek_char(s);\n  if (c) {\n    s.pos = s.pos + 1;\n    return(c);\n  }\n};\nvar skip_non_code = function (s) {\n  while (true) {\n    var c = peek_char(s);\n    if (nil63(c)) {\n      break;\n    } else {\n      if (whitespace[c]) {\n        read_char(s);\n      } else {\n        if (c === \";\") {\n          while (c && !( c === \"\\n\")) {\n            c = read_char(s);\n          }\n          skip_non_code(s);\n        } else {\n          break;\n        }\n      }\n    }\n  }\n};\nvar read_table = {};\nvar eof = {};\nvar read = function (s) {\n  skip_non_code(s);\n  var c = peek_char(s);\n  if (is63(c)) {\n    return((read_table[c] || read_table[\"\"])(s));\n  } else {\n    return(eof);\n  }\n};\nvar read_all = function (s) {\n  var l = [];\n  while (true) {\n    var form = read(s);\n    if (form === eof) {\n      break;\n    }\n    add(l, form);\n  }\n  return(l);\n};\nvar read_string = function (str, more) {\n  var x = read(stream(str, more));\n  if (!( x === eof)) {\n    return(x);\n  }\n};\nvar key63 = function (atom) {\n  return(string63(atom) && _35(atom) > 1 && char(atom, edge(atom)) === \":\");\n};\nvar flag63 = function (atom) {\n  return(string63(atom) && _35(atom) > 1 && char(atom, 0) === \":\");\n};\nvar expected = function (s, c) {\n  var _id1 = s;\n  var more = _id1.more;\n  var pos = _id1.pos;\n  var _id2 = more;\n  var _e;\n  if (_id2) {\n    _e = _id2;\n  } else {\n    throw new Error(\"Expected \" + c + \" at \" + pos);\n    _e = undefined;\n  }\n  return(_e);\n};\nvar wrap = function (s, x) {\n  var y = read(s);\n  if (y === s.more) {\n    return(y);\n  } else {\n    return([x, y]);\n  }\n};\nread_table[\"\"] = function (s) {\n  var str = \"\";\n  while (true) {\n    var c = peek_char(s);\n    if (c && (! whitespace[c] && ! delimiters[c])) {\n      str = str + read_char(s);\n    } else {\n      break;\n    }\n  }\n  if (str === \"true\") {\n    return(true);\n  } else {\n    if (str === \"false\") {\n      return(false);\n    } else {\n      if (str === \"nan\") {\n        return(nan);\n      } else {\n        if (str === \"-nan\") {\n          return(nan);\n        } else {\n          if (str === \"inf\") {\n            return(inf);\n          } else {\n            if (str === \"-inf\") {\n              return(-inf);\n            } else {\n              if (! number_code63(code(str, edge(str)))) {\n                return(str);\n              } else {\n                var n = number(str);\n                if (nil63(n) || nan63(n) || inf63(n)) {\n                  return(str);\n                } else {\n                  return(n);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nread_table[\"(\"] = function (s) {\n  read_char(s);\n  var r = undefined;\n  var l = [];\n  while (nil63(r)) {\n    skip_non_code(s);\n    var c = peek_char(s);\n    if (c === \")\") {\n      read_char(s);\n      r = l;\n    } else {\n      if (nil63(c)) {\n        r = expected(s, \")\");\n      } else {\n        var x = read(s);\n        if (key63(x)) {\n          var k = clip(x, 0, edge(x));\n          var v = read(s);\n          l[k] = v;\n        } else {\n          if (flag63(x)) {\n            l[clip(x, 1)] = true;\n          } else {\n            add(l, x);\n          }\n        }\n      }\n    }\n  }\n  return(r);\n};\nread_table[\")\"] = function (s) {\n  throw new Error(\"Unexpected ) at \" + s.pos);\n};\nread_table[\"\\\"\"] = function (s) {\n  read_char(s);\n  var r = undefined;\n  var str = \"\\\"\";\n  while (nil63(r)) {\n    var c = peek_char(s);\n    if (c === \"\\\"\") {\n      r = str + read_char(s);\n    } else {\n      if (nil63(c)) {\n        r = expected(s, \"\\\"\");\n      } else {\n        if (c === \"\\\\\") {\n          str = str + read_char(s);\n        }\n        str = str + read_char(s);\n      }\n    }\n  }\n  return(r);\n};\nread_table[\"|\"] = function (s) {\n  read_char(s);\n  var r = undefined;\n  var str = \"|\";\n  while (nil63(r)) {\n    var c = peek_char(s);\n    if (c === \"|\") {\n      r = str + read_char(s);\n    } else {\n      if (nil63(c)) {\n        r = expected(s, \"|\");\n      } else {\n        str = str + read_char(s);\n      }\n    }\n  }\n  return(r);\n};\nread_table[\"'\"] = function (s) {\n  read_char(s);\n  return(wrap(s, \"quote\"));\n};\nread_table[\"`\"] = function (s) {\n  read_char(s);\n  return(wrap(s, \"quasiquote\"));\n};\nread_table[\",\"] = function (s) {\n  read_char(s);\n  if (peek_char(s) === \"@\") {\n    read_char(s);\n    return(wrap(s, \"unquote-splicing\"));\n  } else {\n    return(wrap(s, \"unquote\"));\n  }\n};\nexports.stream = stream;\nexports.read = read;\nexports[\"read-all\"] = read_all;\nexports[\"read-string\"] = read_string;\nexports[\"read-table\"] = read_table;\nreturn exports;\n});\n\n",
    "if (typeof define !== 'function') { var define = require('amdefine')(module) }\ndefine('compiler',['require','reader'],function(require) {\nvar exports = {};\nvar reader = require(\"reader\");\nvar getenv = function (k, p) {\n  if (string63(k)) {\n    var i = edge(environment);\n    while (i >= 0) {\n      var b = environment[i][k];\n      if (is63(b)) {\n        var _e9;\n        if (p) {\n          _e9 = b[p];\n        } else {\n          _e9 = b;\n        }\n        return(_e9);\n      } else {\n        i = i - 1;\n      }\n    }\n  }\n};\nvar macro_function = function (k) {\n  return(getenv(k, \"macro\"));\n};\nvar macro63 = function (k) {\n  return(is63(macro_function(k)));\n};\nvar special63 = function (k) {\n  return(is63(getenv(k, \"special\")));\n};\nvar special_form63 = function (form) {\n  return(! atom63(form) && special63(hd(form)));\n};\nvar statement63 = function (k) {\n  return(special63(k) && getenv(k, \"stmt\"));\n};\nvar symbol_expansion = function (k) {\n  return(getenv(k, \"symbol\"));\n};\nvar symbol63 = function (k) {\n  return(is63(symbol_expansion(k)));\n};\nvar variable63 = function (k) {\n  var b = first(function (frame) {\n    return(frame[k]);\n  }, reverse(environment));\n  return(! atom63(b) && is63(b.variable));\n};\nbound63 = function (x) {\n  return(macro63(x) || special63(x) || symbol63(x) || variable63(x));\n};\nquoted = function (form) {\n  if (string63(form)) {\n    return(escape(form));\n  } else {\n    if (atom63(form)) {\n      return(form);\n    } else {\n      return(join([\"list\"], map(quoted, form)));\n    }\n  }\n};\nvar literal = function (s) {\n  if (string_literal63(s)) {\n    return(s);\n  } else {\n    return(quoted(s));\n  }\n};\nvar _names = {};\nunique = function (x) {\n  if (_names[x]) {\n    var i = _names[x];\n    _names[x] = _names[x] + 1;\n    return(unique(x + i));\n  } else {\n    _names[x] = 1;\n    return(\"_\" + x);\n  }\n};\nvar stash42 = function (args) {\n  if (keys63(args)) {\n    var l = [\"%object\", \"\\\"_stash\\\"\", true];\n    var _o = args;\n    var k = undefined;\n    for (k in _o) {\n      var v = _o[k];\n      var _e10;\n      if (numeric63(k)) {\n        _e10 = parseInt(k);\n      } else {\n        _e10 = k;\n      }\n      var _k = _e10;\n      if (! number63(_k)) {\n        add(l, literal(_k));\n        add(l, v);\n      }\n    }\n    return(join(args, [l]));\n  } else {\n    return(args);\n  }\n};\nvar bias = function (k) {\n  if (number63(k) && !( target === \"js\")) {\n    if (target === \"js\") {\n      k = k - 1;\n    } else {\n      k = k + 1;\n    }\n  }\n  return(k);\n};\nbind = function (lh, rh) {\n  if (atom63(lh)) {\n    return([lh, rh]);\n  } else {\n    var id = unique(\"id\");\n    var bs = [id, rh];\n    var _o1 = lh;\n    var k = undefined;\n    for (k in _o1) {\n      var v = _o1[k];\n      var _e11;\n      if (numeric63(k)) {\n        _e11 = parseInt(k);\n      } else {\n        _e11 = k;\n      }\n      var _k1 = _e11;\n      var _e12;\n      if (_k1 === \"rest\") {\n        _e12 = [\"cut\", id, _35(lh)];\n      } else {\n        _e12 = [\"get\", id, [\"quote\", bias(_k1)]];\n      }\n      var x = _e12;\n      if (is63(_k1)) {\n        var _e13;\n        if (v === true) {\n          _e13 = _k1;\n        } else {\n          _e13 = v;\n        }\n        var _k2 = _e13;\n        bs = join(bs, bind(_k2, x));\n      }\n    }\n    return(bs);\n  }\n};\nsetenv(\"arguments%\", {_stash: true, macro: function (from) {\n  return([[\"get\", [\"get\", [\"get\", \"Array\", [\"quote\", \"prototype\"]], [\"quote\", \"slice\"]], [\"quote\", \"call\"]], \"arguments\", from]);\n}});\nbind42 = function (args, body) {\n  var args1 = [];\n  var rest = function () {\n    if (target === \"js\") {\n      return([\"unstash\", [\"arguments%\", _35(args1)]]);\n    } else {\n      add(args1, \"|...|\");\n      return([\"unstash\", [\"list\", \"|...|\"]]);\n    }\n  };\n  if (atom63(args)) {\n    return([args1, join([\"let\", [args, rest()]], body)]);\n  } else {\n    var bs = [];\n    var r = unique(\"r\");\n    var _o2 = args;\n    var k = undefined;\n    for (k in _o2) {\n      var v = _o2[k];\n      var _e14;\n      if (numeric63(k)) {\n        _e14 = parseInt(k);\n      } else {\n        _e14 = k;\n      }\n      var _k3 = _e14;\n      if (number63(_k3)) {\n        if (atom63(v)) {\n          add(args1, v);\n        } else {\n          var x = unique(\"x\");\n          add(args1, x);\n          bs = join(bs, [v, x]);\n        }\n      }\n    }\n    if (keys63(args)) {\n      bs = join(bs, [r, rest()]);\n      bs = join(bs, [keys(args), r]);\n    }\n    return([args1, join([\"let\", bs], body)]);\n  }\n};\nvar quoting63 = function (depth) {\n  return(number63(depth));\n};\nvar quasiquoting63 = function (depth) {\n  return(quoting63(depth) && depth > 0);\n};\nvar can_unquote63 = function (depth) {\n  return(quoting63(depth) && depth === 1);\n};\nvar quasisplice63 = function (x, depth) {\n  return(can_unquote63(depth) && ! atom63(x) && hd(x) === \"unquote-splicing\");\n};\nvar expand_local = function (_x34) {\n  var _id = _x34;\n  var x = _id[0];\n  var name = _id[1];\n  var value = _id[2];\n  return([\"%local\", name, macroexpand(value)]);\n};\nvar expand_function = function (_x36) {\n  var _id1 = _x36;\n  var x = _id1[0];\n  var args = _id1[1];\n  var body = cut(_id1, 2);\n  add(environment, {});\n  var _o3 = args;\n  var _i3 = undefined;\n  for (_i3 in _o3) {\n    var _x37 = _o3[_i3];\n    var _e15;\n    if (numeric63(_i3)) {\n      _e15 = parseInt(_i3);\n    } else {\n      _e15 = _i3;\n    }\n    var __i3 = _e15;\n    setenv(_x37, {_stash: true, variable: true});\n  }\n  var _x38 = join([\"%function\", args], macroexpand(body));\n  drop(environment);\n  return(_x38);\n};\nvar expand_definition = function (_x40) {\n  var _id2 = _x40;\n  var x = _id2[0];\n  var name = _id2[1];\n  var args = _id2[2];\n  var body = cut(_id2, 3);\n  add(environment, {});\n  var _o4 = args;\n  var _i4 = undefined;\n  for (_i4 in _o4) {\n    var _x41 = _o4[_i4];\n    var _e16;\n    if (numeric63(_i4)) {\n      _e16 = parseInt(_i4);\n    } else {\n      _e16 = _i4;\n    }\n    var __i4 = _e16;\n    setenv(_x41, {_stash: true, variable: true});\n  }\n  var _x42 = join([x, name, args], macroexpand(body));\n  drop(environment);\n  return(_x42);\n};\nvar expand_macro = function (_x44) {\n  var _id3 = _x44;\n  var name = _id3[0];\n  var body = cut(_id3, 1);\n  return(macroexpand(apply(macro_function(name), body)));\n};\nmacroexpand = function (form) {\n  if (symbol63(form)) {\n    return(macroexpand(symbol_expansion(form)));\n  } else {\n    if (atom63(form)) {\n      return(form);\n    } else {\n      var x = hd(form);\n      if (x === \"%local\") {\n        return(expand_local(form));\n      } else {\n        if (x === \"%function\") {\n          return(expand_function(form));\n        } else {\n          if (x === \"%global-function\") {\n            return(expand_definition(form));\n          } else {\n            if (x === \"%local-function\") {\n              return(expand_definition(form));\n            } else {\n              if (macro63(x)) {\n                return(expand_macro(form));\n              } else {\n                return(map(macroexpand, form));\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nvar quasiquote_list = function (form, depth) {\n  var xs = [[\"list\"]];\n  var _o5 = form;\n  var k = undefined;\n  for (k in _o5) {\n    var v = _o5[k];\n    var _e17;\n    if (numeric63(k)) {\n      _e17 = parseInt(k);\n    } else {\n      _e17 = k;\n    }\n    var _k4 = _e17;\n    if (! number63(_k4)) {\n      var _e18;\n      if (quasisplice63(v, depth)) {\n        _e18 = quasiexpand(v[1]);\n      } else {\n        _e18 = quasiexpand(v, depth);\n      }\n      var _v = _e18;\n      last(xs)[_k4] = _v;\n    }\n  }\n  var _x47 = form;\n  var _n6 = _35(_x47);\n  var _i6 = 0;\n  while (_i6 < _n6) {\n    var x = _x47[_i6];\n    if (quasisplice63(x, depth)) {\n      var _x48 = quasiexpand(x[1]);\n      add(xs, _x48);\n      add(xs, [\"list\"]);\n    } else {\n      add(last(xs), quasiexpand(x, depth));\n    }\n    _i6 = _i6 + 1;\n  }\n  var pruned = keep(function (x) {\n    return(_35(x) > 1 || !( hd(x) === \"list\") || keys63(x));\n  }, xs);\n  if (one63(pruned)) {\n    return(hd(pruned));\n  } else {\n    return(join([\"join\"], pruned));\n  }\n};\nquasiexpand = function (form, depth) {\n  if (quasiquoting63(depth)) {\n    if (atom63(form)) {\n      return([\"quote\", form]);\n    } else {\n      if (can_unquote63(depth) && hd(form) === \"unquote\") {\n        return(quasiexpand(form[1]));\n      } else {\n        if (hd(form) === \"unquote\" || hd(form) === \"unquote-splicing\") {\n          return(quasiquote_list(form, depth - 1));\n        } else {\n          if (hd(form) === \"quasiquote\") {\n            return(quasiquote_list(form, depth + 1));\n          } else {\n            return(quasiquote_list(form, depth));\n          }\n        }\n      }\n    }\n  } else {\n    if (atom63(form)) {\n      return(form);\n    } else {\n      if (hd(form) === \"quote\") {\n        return(form);\n      } else {\n        if (hd(form) === \"quasiquote\") {\n          return(quasiexpand(form[1], 1));\n        } else {\n          return(map(function (x) {\n            return(quasiexpand(x, depth));\n          }, form));\n        }\n      }\n    }\n  }\n};\nexpand_if = function (_x52) {\n  var _id4 = _x52;\n  var a = _id4[0];\n  var b = _id4[1];\n  var c = cut(_id4, 2);\n  if (is63(b)) {\n    return([join([\"%if\", a, b], expand_if(c))]);\n  } else {\n    if (is63(a)) {\n      return([a]);\n    }\n  }\n};\nindent_level = 0;\nindentation = function () {\n  var s = \"\";\n  var i = 0;\n  while (i < indent_level) {\n    s = s + \"  \";\n    i = i + 1;\n  }\n  return(s);\n};\nvar reserved = {\"var\": true, \"until\": true, \"continue\": true, \"-\": true, \"in\": true, \"for\": true, \"default\": true, \"<=\": true, \">=\": true, \"while\": true, \"repeat\": true, \"do\": true, \"or\": true, \"local\": true, \"*\": true, \"void\": true, \"<\": true, \"true\": true, \"break\": true, \"false\": true, \"this\": true, \"new\": true, \"elseif\": true, \"nil\": true, \"then\": true, \"switch\": true, \"finally\": true, \"debugger\": true, \"with\": true, \"end\": true, \"function\": true, \"==\": true, \"case\": true, \"and\": true, \"typeof\": true, \"try\": true, \"return\": true, \"=\": true, \"if\": true, \"instanceof\": true, \"catch\": true, \"delete\": true, \"+\": true, \"else\": true, \"/\": true, \">\": true, \"throw\": true, \"%\": true, \"not\": true};\nreserved63 = function (x) {\n  return(reserved[x]);\n};\nvar valid_code63 = function (n) {\n  return(number_code63(n) || n > 64 && n < 91 || n > 96 && n < 123 || n === 95);\n};\nvalid_id63 = function (id) {\n  if (none63(id) || reserved63(id)) {\n    return(false);\n  } else {\n    var i = 0;\n    while (i < _35(id)) {\n      if (! valid_code63(code(id, i))) {\n        return(false);\n      }\n      i = i + 1;\n    }\n    return(true);\n  }\n};\nkey = function (k) {\n  var i = inner(k);\n  if (valid_id63(i)) {\n    return(i);\n  } else {\n    if (target === \"js\") {\n      return(k);\n    } else {\n      return(\"[\" + k + \"]\");\n    }\n  }\n};\nmapo = function (f, t) {\n  var o = [];\n  var _o6 = t;\n  var k = undefined;\n  for (k in _o6) {\n    var v = _o6[k];\n    var _e19;\n    if (numeric63(k)) {\n      _e19 = parseInt(k);\n    } else {\n      _e19 = k;\n    }\n    var _k5 = _e19;\n    var x = f(v);\n    if (is63(x)) {\n      add(o, literal(_k5));\n      add(o, x);\n    }\n  }\n  return(o);\n};\nvar __x57 = [];\nvar _x58 = [];\n_x58.lua = \"not\";\n_x58.js = \"!\";\n__x57[\"not\"] = _x58;\nvar __x59 = [];\n__x59[\"/\"] = true;\n__x59[\"*\"] = true;\n__x59[\"%\"] = true;\nvar __x60 = [];\n__x60[\"+\"] = true;\n__x60[\"-\"] = true;\nvar __x61 = [];\nvar _x62 = [];\n_x62.lua = \"..\";\n_x62.js = \"+\";\n__x61.cat = _x62;\nvar __x63 = [];\n__x63[\"<=\"] = true;\n__x63[\">\"] = true;\n__x63[\">=\"] = true;\n__x63[\"<\"] = true;\nvar __x64 = [];\nvar _x65 = [];\n_x65.lua = \"==\";\n_x65.js = \"===\";\n__x64[\"=\"] = _x65;\nvar __x66 = [];\nvar _x67 = [];\n_x67.lua = \"and\";\n_x67.js = \"&&\";\n__x66[\"and\"] = _x67;\nvar __x68 = [];\nvar _x69 = [];\n_x69.lua = \"or\";\n_x69.js = \"||\";\n__x68[\"or\"] = _x69;\nvar infix = [__x57, __x59, __x60, __x61, __x63, __x64, __x66, __x68];\nvar unary63 = function (form) {\n  return(two63(form) && in63(hd(form), [\"not\", \"-\"]));\n};\nvar index = function (k) {\n  return(k);\n};\nvar precedence = function (form) {\n  if (!( atom63(form) || unary63(form))) {\n    var _o7 = infix;\n    var k = undefined;\n    for (k in _o7) {\n      var v = _o7[k];\n      var _e20;\n      if (numeric63(k)) {\n        _e20 = parseInt(k);\n      } else {\n        _e20 = k;\n      }\n      var _k6 = _e20;\n      if (v[hd(form)]) {\n        return(index(_k6));\n      }\n    }\n  }\n  return(0);\n};\nvar getop = function (op) {\n  return(find(function (level) {\n    var x = level[op];\n    if (x === true) {\n      return(op);\n    } else {\n      if (is63(x)) {\n        return(x[target]);\n      }\n    }\n  }, infix));\n};\nvar infix63 = function (x) {\n  return(is63(getop(x)));\n};\nvar compile_args = function (args) {\n  var s = \"(\";\n  var c = \"\";\n  var _x71 = args;\n  var _n9 = _35(_x71);\n  var _i9 = 0;\n  while (_i9 < _n9) {\n    var x = _x71[_i9];\n    s = s + c + compile(x);\n    c = \", \";\n    _i9 = _i9 + 1;\n  }\n  return(s + \")\");\n};\nvar escape_newlines = function (s) {\n  var s1 = \"\";\n  var i = 0;\n  while (i < _35(s)) {\n    var c = char(s, i);\n    var _e21;\n    if (c === \"\\n\") {\n      _e21 = \"\\\\n\";\n    } else {\n      _e21 = c;\n    }\n    s1 = s1 + _e21;\n    i = i + 1;\n  }\n  return(s1);\n};\nvar id = function (id) {\n  var id1 = \"\";\n  var i = 0;\n  while (i < _35(id)) {\n    var c = char(id, i);\n    var n = code(c);\n    var _e22;\n    if (c === \"-\") {\n      _e22 = \"_\";\n    } else {\n      var _e23;\n      if (valid_code63(n)) {\n        _e23 = c;\n      } else {\n        var _e24;\n        if (i === 0) {\n          _e24 = \"_\" + n;\n        } else {\n          _e24 = n;\n        }\n        _e23 = _e24;\n      }\n      _e22 = _e23;\n    }\n    var c1 = _e22;\n    id1 = id1 + c1;\n    i = i + 1;\n  }\n  if (reserved63(id1)) {\n    return(\"_\" + id1);\n  } else {\n    return(id1);\n  }\n};\nvar compile_atom = function (x) {\n  if (x === \"nil\" && target === \"lua\") {\n    return(x);\n  } else {\n    if (x === \"nil\") {\n      return(\"undefined\");\n    } else {\n      if (id_literal63(x)) {\n        return(inner(x));\n      } else {\n        if (string_literal63(x)) {\n          return(escape_newlines(x));\n        } else {\n          if (string63(x)) {\n            return(id(x));\n          } else {\n            if (boolean63(x)) {\n              if (x) {\n                return(\"true\");\n              } else {\n                return(\"false\");\n              }\n            } else {\n              if (nan63(x)) {\n                return(\"nan\");\n              } else {\n                if (x === inf) {\n                  return(\"inf\");\n                } else {\n                  if (x === -inf) {\n                    return(\"-inf\");\n                  } else {\n                    if (number63(x)) {\n                      return(x + \"\");\n                    } else {\n                      throw new Error(\"Cannot compile atom: \" + str(x));\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nvar terminator = function (stmt63) {\n  if (! stmt63) {\n    return(\"\");\n  } else {\n    if (target === \"js\") {\n      return(\";\\n\");\n    } else {\n      return(\"\\n\");\n    }\n  }\n};\nvar compile_special = function (form, stmt63) {\n  var _id5 = form;\n  var x = _id5[0];\n  var args = cut(_id5, 1);\n  var _id6 = getenv(x);\n  var special = _id6.special;\n  var stmt = _id6.stmt;\n  var self_tr63 = _id6.tr;\n  var tr = terminator(stmt63 && ! self_tr63);\n  return(apply(special, args) + tr);\n};\nvar parenthesize_call63 = function (x) {\n  return(! atom63(x) && hd(x) === \"%function\" || precedence(x) > 0);\n};\nvar compile_call = function (form) {\n  var f = hd(form);\n  var f1 = compile(f);\n  var args = compile_args(stash42(tl(form)));\n  if (parenthesize_call63(f)) {\n    return(\"(\" + f1 + \")\" + args);\n  } else {\n    return(f1 + args);\n  }\n};\nvar op_delims = function (parent, child) {\n  var _r55 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id7 = _r55;\n  var right = _id7.right;\n  var _e25;\n  if (right) {\n    _e25 = _6261;\n  } else {\n    _e25 = _62;\n  }\n  if (_e25(precedence(child), precedence(parent))) {\n    return([\"(\", \")\"]);\n  } else {\n    return([\"\", \"\"]);\n  }\n};\nvar compile_infix = function (form) {\n  var _id8 = form;\n  var op = _id8[0];\n  var _id9 = cut(_id8, 1);\n  var a = _id9[0];\n  var b = _id9[1];\n  var _id10 = op_delims(form, a);\n  var ao = _id10[0];\n  var ac = _id10[1];\n  var _id11 = op_delims(form, b, {_stash: true, right: true});\n  var bo = _id11[0];\n  var bc = _id11[1];\n  var _a = compile(a);\n  var _b = compile(b);\n  var _op = getop(op);\n  if (unary63(form)) {\n    return(_op + ao + \" \" + _a + ac);\n  } else {\n    return(ao + _a + ac + \" \" + _op + \" \" + bo + _b + bc);\n  }\n};\ncompile_function = function (args, body) {\n  var _r57 = unstash(Array.prototype.slice.call(arguments, 2));\n  var _id12 = _r57;\n  var prefix = _id12.prefix;\n  var name = _id12.name;\n  var _e26;\n  if (name) {\n    _e26 = compile(name);\n  } else {\n    _e26 = \"\";\n  }\n  var _id13 = _e26;\n  var _args = compile_args(args);\n  indent_level = indent_level + 1;\n  var _x74 = compile(body, {_stash: true, stmt: true});\n  indent_level = indent_level - 1;\n  var _body = _x74;\n  var ind = indentation();\n  var _e27;\n  if (prefix) {\n    _e27 = prefix + \" \";\n  } else {\n    _e27 = \"\";\n  }\n  var p = _e27;\n  var _e28;\n  if (target === \"js\") {\n    _e28 = \"\";\n  } else {\n    _e28 = \"end\";\n  }\n  var tr = _e28;\n  if (name) {\n    tr = tr + \"\\n\";\n  }\n  if (target === \"js\") {\n    return(\"function \" + _id13 + _args + \" {\\n\" + _body + ind + \"}\" + tr);\n  } else {\n    return(p + \"function \" + _id13 + _args + \"\\n\" + _body + ind + tr);\n  }\n};\nvar can_return63 = function (form) {\n  return(is63(form) && (atom63(form) || !( hd(form) === \"return\") && ! statement63(hd(form))));\n};\ncompile = function (form) {\n  var _r59 = unstash(Array.prototype.slice.call(arguments, 1));\n  var _id14 = _r59;\n  var stmt = _id14.stmt;\n  if (nil63(form)) {\n    return(\"\");\n  } else {\n    if (special_form63(form)) {\n      return(compile_special(form, stmt));\n    } else {\n      var tr = terminator(stmt);\n      var _e29;\n      if (stmt) {\n        _e29 = indentation();\n      } else {\n        _e29 = \"\";\n      }\n      var ind = _e29;\n      var _e30;\n      if (atom63(form)) {\n        _e30 = compile_atom(form);\n      } else {\n        var _e31;\n        if (infix63(hd(form))) {\n          _e31 = compile_infix(form);\n        } else {\n          _e31 = compile_call(form);\n        }\n        _e30 = _e31;\n      }\n      var _form = _e30;\n      return(ind + _form + tr);\n    }\n  }\n};\nvar lower_statement = function (form, tail63) {\n  var hoist = [];\n  var e = lower(form, hoist, true, tail63);\n  if (some63(hoist) && is63(e)) {\n    return(join([\"do\"], hoist, [e]));\n  } else {\n    if (is63(e)) {\n      return(e);\n    } else {\n      if (_35(hoist) > 1) {\n        return(join([\"do\"], hoist));\n      } else {\n        return(hd(hoist));\n      }\n    }\n  }\n};\nvar lower_body = function (body, tail63) {\n  return(lower_statement(join([\"do\"], body), tail63));\n};\nvar literal63 = function (form) {\n  return(atom63(form) || hd(form) === \"%array\" || hd(form) === \"%object\");\n};\nvar standalone63 = function (form) {\n  return(! atom63(form) && ! infix63(hd(form)) && ! literal63(form) && !( \"get\" === hd(form)));\n};\nvar lower_do = function (args, hoist, stmt63, tail63) {\n  var _x79 = almost(args);\n  var _n10 = _35(_x79);\n  var _i10 = 0;\n  while (_i10 < _n10) {\n    var x = _x79[_i10];\n    var _y = lower(x, hoist, stmt63);\n    if (_y) {\n      var e = _y;\n      if (standalone63(e)) {\n        add(hoist, e);\n      }\n    }\n    _i10 = _i10 + 1;\n  }\n  var e = lower(last(args), hoist, stmt63, tail63);\n  if (tail63 && can_return63(e)) {\n    return([\"return\", e]);\n  } else {\n    return(e);\n  }\n};\nvar lower_set = function (args, hoist, stmt63, tail63) {\n  var _id15 = args;\n  var lh = _id15[0];\n  var rh = _id15[1];\n  add(hoist, [\"set\", lh, lower(rh, hoist)]);\n  if (!( stmt63 && ! tail63)) {\n    return(lh);\n  }\n};\nvar lower_if = function (args, hoist, stmt63, tail63) {\n  var _id16 = args;\n  var cond = _id16[0];\n  var _then = _id16[1];\n  var _else = _id16[2];\n  if (stmt63 || tail63) {\n    var _e33;\n    if (_else) {\n      _e33 = [lower_body([_else], tail63)];\n    }\n    return(add(hoist, join([\"%if\", lower(cond, hoist), lower_body([_then], tail63)], _e33)));\n  } else {\n    var e = unique(\"e\");\n    add(hoist, [\"%local\", e]);\n    var _e32;\n    if (_else) {\n      _e32 = [lower([\"set\", e, _else])];\n    }\n    add(hoist, join([\"%if\", lower(cond, hoist), lower([\"set\", e, _then])], _e32));\n    return(e);\n  }\n};\nvar lower_short = function (x, args, hoist) {\n  var _id17 = args;\n  var a = _id17[0];\n  var b = _id17[1];\n  var hoist1 = [];\n  var b1 = lower(b, hoist1);\n  if (some63(hoist1)) {\n    var _id18 = unique(\"id\");\n    var _e34;\n    if (x === \"and\") {\n      _e34 = [\"%if\", _id18, b, _id18];\n    } else {\n      _e34 = [\"%if\", _id18, _id18, b];\n    }\n    return(lower([\"do\", [\"%local\", _id18, a], _e34], hoist));\n  } else {\n    return([x, lower(a, hoist), b1]);\n  }\n};\nvar lower_try = function (args, hoist, tail63) {\n  return(add(hoist, [\"%try\", lower_body(args, tail63)]));\n};\nvar lower_while = function (args, hoist) {\n  var _id19 = args;\n  var c = _id19[0];\n  var body = cut(_id19, 1);\n  return(add(hoist, [\"while\", lower(c, hoist), lower_body(body)]));\n};\nvar lower_for = function (args, hoist) {\n  var _id20 = args;\n  var t = _id20[0];\n  var k = _id20[1];\n  var body = cut(_id20, 2);\n  return(add(hoist, [\"%for\", lower(t, hoist), k, lower_body(body)]));\n};\nvar lower_function = function (args) {\n  var _id21 = args;\n  var a = _id21[0];\n  var body = cut(_id21, 1);\n  return([\"%function\", a, lower_body(body, true)]);\n};\nvar lower_definition = function (kind, args, hoist) {\n  var _id22 = args;\n  var name = _id22[0];\n  var _args1 = _id22[1];\n  var body = cut(_id22, 2);\n  return(add(hoist, [kind, name, _args1, lower_body(body, true)]));\n};\nvar lower_call = function (form, hoist) {\n  var _form1 = map(function (x) {\n    return(lower(x, hoist));\n  }, form);\n  if (some63(_form1)) {\n    return(_form1);\n  }\n};\nvar lower_infix63 = function (form) {\n  return(infix63(hd(form)) && _35(form) > 3);\n};\nvar lower_infix = function (form, hoist) {\n  var _id23 = form;\n  var x = _id23[0];\n  var args = cut(_id23, 1);\n  return(lower(reduce(function (a, b) {\n    return([x, b, a]);\n  }, reverse(args)), hoist));\n};\nvar lower_special = function (form, hoist) {\n  var e = lower_call(form, hoist);\n  if (e) {\n    return(add(hoist, e));\n  }\n};\nlower = function (form, hoist, stmt63, tail63) {\n  if (atom63(form)) {\n    return(form);\n  } else {\n    if (empty63(form)) {\n      return([\"%array\"]);\n    } else {\n      if (nil63(hoist)) {\n        return(lower_statement(form));\n      } else {\n        if (lower_infix63(form)) {\n          return(lower_infix(form, hoist));\n        } else {\n          var _id24 = form;\n          var x = _id24[0];\n          var args = cut(_id24, 1);\n          if (x === \"do\") {\n            return(lower_do(args, hoist, stmt63, tail63));\n          } else {\n            if (x === \"set\") {\n              return(lower_set(args, hoist, stmt63, tail63));\n            } else {\n              if (x === \"%if\") {\n                return(lower_if(args, hoist, stmt63, tail63));\n              } else {\n                if (x === \"%try\") {\n                  return(lower_try(args, hoist, tail63));\n                } else {\n                  if (x === \"while\") {\n                    return(lower_while(args, hoist));\n                  } else {\n                    if (x === \"%for\") {\n                      return(lower_for(args, hoist));\n                    } else {\n                      if (x === \"%function\") {\n                        return(lower_function(args));\n                      } else {\n                        if (x === \"%local-function\" || x === \"%global-function\") {\n                          return(lower_definition(x, args, hoist));\n                        } else {\n                          if (in63(x, [\"and\", \"or\"])) {\n                            return(lower_short(x, args, hoist));\n                          } else {\n                            if (statement63(x)) {\n                              return(lower_special(form, hoist));\n                            } else {\n                              return(lower_call(form, hoist));\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\nvar expand = function (form) {\n  return(lower(macroexpand(form)));\n};\nglobal.require = require;\nvar run = eval;\n_37result = undefined;\neval = function (form) {\n  var previous = target;\n  target = \"js\";\n  var code = compile(expand([\"set\", \"%result\", form]));\n  target = previous;\n  run(code);\n  return(_37result);\n};\nsetenv(\"do\", {_stash: true, special: function () {\n  var forms = unstash(Array.prototype.slice.call(arguments, 0));\n  var s = \"\";\n  var _x107 = forms;\n  var _n12 = _35(_x107);\n  var _i12 = 0;\n  while (_i12 < _n12) {\n    var x = _x107[_i12];\n    s = s + compile(x, {_stash: true, stmt: true});\n    _i12 = _i12 + 1;\n  }\n  return(s);\n}, stmt: true, tr: true});\nsetenv(\"%if\", {_stash: true, special: function (cond, cons, alt) {\n  var _cond1 = compile(cond);\n  indent_level = indent_level + 1;\n  var _x110 = compile(cons, {_stash: true, stmt: true});\n  indent_level = indent_level - 1;\n  var _cons1 = _x110;\n  var _e35;\n  if (alt) {\n    indent_level = indent_level + 1;\n    var _x111 = compile(alt, {_stash: true, stmt: true});\n    indent_level = indent_level - 1;\n    _e35 = _x111;\n  }\n  var _alt1 = _e35;\n  var ind = indentation();\n  var s = \"\";\n  if (target === \"js\") {\n    s = s + ind + \"if (\" + _cond1 + \") {\\n\" + _cons1 + ind + \"}\";\n  } else {\n    s = s + ind + \"if \" + _cond1 + \" then\\n\" + _cons1;\n  }\n  if (_alt1 && target === \"js\") {\n    s = s + \" else {\\n\" + _alt1 + ind + \"}\";\n  } else {\n    if (_alt1) {\n      s = s + ind + \"else\\n\" + _alt1;\n    }\n  }\n  if (target === \"lua\") {\n    return(s + ind + \"end\\n\");\n  } else {\n    return(s + \"\\n\");\n  }\n}, stmt: true, tr: true});\nsetenv(\"while\", {_stash: true, special: function (cond, form) {\n  var _cond3 = compile(cond);\n  indent_level = indent_level + 1;\n  var _x113 = compile(form, {_stash: true, stmt: true});\n  indent_level = indent_level - 1;\n  var body = _x113;\n  var ind = indentation();\n  if (target === \"js\") {\n    return(ind + \"while (\" + _cond3 + \") {\\n\" + body + ind + \"}\\n\");\n  } else {\n    return(ind + \"while \" + _cond3 + \" do\\n\" + body + ind + \"end\\n\");\n  }\n}, stmt: true, tr: true});\nsetenv(\"%for\", {_stash: true, special: function (t, k, form) {\n  var _t1 = compile(t);\n  var ind = indentation();\n  indent_level = indent_level + 1;\n  var _x115 = compile(form, {_stash: true, stmt: true});\n  indent_level = indent_level - 1;\n  var body = _x115;\n  if (target === \"lua\") {\n    return(ind + \"for \" + k + \" in next, \" + _t1 + \" do\\n\" + body + ind + \"end\\n\");\n  } else {\n    return(ind + \"for (\" + k + \" in \" + _t1 + \") {\\n\" + body + ind + \"}\\n\");\n  }\n}, stmt: true, tr: true});\nsetenv(\"%try\", {_stash: true, special: function (form) {\n  var e = unique(\"e\");\n  var ind = indentation();\n  indent_level = indent_level + 1;\n  var _x122 = compile(form, {_stash: true, stmt: true});\n  indent_level = indent_level - 1;\n  var body = _x122;\n  var hf = [\"return\", [\"%array\", false, [\"get\", e, \"\\\"message\\\"\"], [\"get\", e, \"\\\"stack\\\"\"]]];\n  indent_level = indent_level + 1;\n  var _x127 = compile(hf, {_stash: true, stmt: true});\n  indent_level = indent_level - 1;\n  var h = _x127;\n  return(ind + \"try {\\n\" + body + ind + \"}\\n\" + ind + \"catch (\" + e + \") {\\n\" + h + ind + \"}\\n\");\n}, stmt: true, tr: true});\nsetenv(\"%delete\", {_stash: true, stmt: true, special: function (place) {\n  return(indentation() + \"delete \" + compile(place));\n}});\nsetenv(\"break\", {_stash: true, stmt: true, special: function () {\n  return(indentation() + \"break\");\n}});\nsetenv(\"%function\", {_stash: true, special: function (args, body) {\n  return(compile_function(args, body));\n}});\nsetenv(\"%global-function\", {_stash: true, special: function (name, args, body) {\n  if (target === \"lua\") {\n    var x = compile_function(args, body, {_stash: true, name: name});\n    return(indentation() + x);\n  } else {\n    return(compile([\"set\", name, [\"%function\", args, body]], {_stash: true, stmt: true}));\n  }\n}, stmt: true, tr: true});\nsetenv(\"%local-function\", {_stash: true, special: function (name, args, body) {\n  if (target === \"lua\") {\n    var x = compile_function(args, body, {_stash: true, prefix: \"local\", name: name});\n    return(indentation() + x);\n  } else {\n    return(compile([\"%local\", name, [\"%function\", args, body]], {_stash: true, stmt: true}));\n  }\n}, stmt: true, tr: true});\nsetenv(\"return\", {_stash: true, stmt: true, special: function (x) {\n  var _e36;\n  if (nil63(x)) {\n    _e36 = \"return\";\n  } else {\n    _e36 = \"return(\" + compile(x) + \")\";\n  }\n  var _x137 = _e36;\n  return(indentation() + _x137);\n}});\nsetenv(\"new\", {_stash: true, special: function (x) {\n  return(\"new \" + compile(x));\n}});\nsetenv(\"typeof\", {_stash: true, special: function (x) {\n  return(\"typeof(\" + compile(x) + \")\");\n}});\nsetenv(\"error\", {_stash: true, stmt: true, special: function (x) {\n  var _e37;\n  if (target === \"js\") {\n    _e37 = \"throw \" + compile([\"new\", [\"Error\", x]]);\n  } else {\n    _e37 = \"error(\" + compile(x) + \")\";\n  }\n  var e = _e37;\n  return(indentation() + e);\n}});\nsetenv(\"%local\", {_stash: true, stmt: true, special: function (name, value) {\n  var _id26 = compile(name);\n  var value1 = compile(value);\n  var _e38;\n  if (is63(value)) {\n    _e38 = \" = \" + value1;\n  } else {\n    _e38 = \"\";\n  }\n  var rh = _e38;\n  var _e39;\n  if (target === \"js\") {\n    _e39 = \"var \";\n  } else {\n    _e39 = \"local \";\n  }\n  var keyword = _e39;\n  var ind = indentation();\n  return(ind + keyword + _id26 + rh);\n}});\nsetenv(\"set\", {_stash: true, stmt: true, special: function (lh, rh) {\n  var _lh1 = compile(lh);\n  var _e40;\n  if (nil63(rh)) {\n    _e40 = \"nil\";\n  } else {\n    _e40 = rh;\n  }\n  var _rh1 = compile(_e40);\n  return(indentation() + _lh1 + \" = \" + _rh1);\n}});\nsetenv(\"get\", {_stash: true, special: function (t, k) {\n  var _t3 = compile(t);\n  var k1 = compile(k);\n  if (target === \"lua\" && char(_t3, 0) === \"{\") {\n    _t3 = \"(\" + _t3 + \")\";\n  }\n  if (string_literal63(k) && valid_id63(inner(k))) {\n    return(_t3 + \".\" + inner(k));\n  } else {\n    return(_t3 + \"[\" + k1 + \"]\");\n  }\n}});\nsetenv(\"%array\", {_stash: true, special: function () {\n  var forms = unstash(Array.prototype.slice.call(arguments, 0));\n  var _e41;\n  if (target === \"lua\") {\n    _e41 = \"{\";\n  } else {\n    _e41 = \"[\";\n  }\n  var open = _e41;\n  var _e42;\n  if (target === \"lua\") {\n    _e42 = \"}\";\n  } else {\n    _e42 = \"]\";\n  }\n  var close = _e42;\n  var s = \"\";\n  var c = \"\";\n  var _o9 = forms;\n  var k = undefined;\n  for (k in _o9) {\n    var v = _o9[k];\n    var _e43;\n    if (numeric63(k)) {\n      _e43 = parseInt(k);\n    } else {\n      _e43 = k;\n    }\n    var _k7 = _e43;\n    if (number63(_k7)) {\n      s = s + c + compile(v);\n      c = \", \";\n    }\n  }\n  return(open + s + close);\n}});\nsetenv(\"%object\", {_stash: true, special: function () {\n  var forms = unstash(Array.prototype.slice.call(arguments, 0));\n  var s = \"{\";\n  var c = \"\";\n  var _e44;\n  if (target === \"lua\") {\n    _e44 = \" = \";\n  } else {\n    _e44 = \": \";\n  }\n  var sep = _e44;\n  var _o11 = pair(forms);\n  var k = undefined;\n  for (k in _o11) {\n    var v = _o11[k];\n    var _e45;\n    if (numeric63(k)) {\n      _e45 = parseInt(k);\n    } else {\n      _e45 = k;\n    }\n    var _k9 = _e45;\n    if (number63(_k9)) {\n      var _id28 = v;\n      var _k10 = _id28[0];\n      var _v2 = _id28[1];\n      if (! string63(_k10)) {\n        throw new Error(\"Illegal key: \" + str(_k10));\n      }\n      s = s + c + key(_k10) + sep + compile(_v2);\n      c = \", \";\n    }\n  }\n  return(s + \"}\");\n}});\nexports.run = run;\nexports.eval = eval;\nexports.expand = expand;\nexports.compile = compile;\nreturn exports;\n});\n\n",
    "if (typeof define !== 'function') { var define = require('amdefine')(module) }\ndefine('system',['require','fs','path'],function(require) {\nvar exports = {};\nvar fs = require(\"fs\");\nif (browser63) {\n  process = {argv: []};\n}\nvar read_file = function (path) {\n  return(fs.readFileSync(path, \"utf8\"));\n};\nvar write_file = function (path, data) {\n  return(fs.writeFileSync(path, data, \"utf8\"));\n};\nvar file_exists63 = function (path) {\n  return(fs.existsSync(path, \"utf8\"));\n};\nvar _e;\nif (browser63) {\n  _e = \"/\";\n} else {\n  _e = require(\"path\").sep;\n}\nvar path_separator = _e;\nvar path_join = function () {\n  var parts = unstash(Array.prototype.slice.call(arguments, 0));\n  if (none63(parts)) {\n    return(\"\");\n  } else {\n    return(reduce(function (x, y) {\n      return(x + path_separator + y);\n    }, parts));\n  }\n};\nvar get_environment_variable = function (name) {\n  return(process.env[name]);\n};\nvar write = function (x) {\n  var out = process.stdout;\n  return(out.write(x));\n};\nvar exit = function (code) {\n  return(process.exit(code));\n};\nvar argv = cut(process.argv, 2);\nexports[\"read-file\"] = read_file;\nexports[\"write-file\"] = write_file;\nexports[\"file-exists?\"] = file_exists63;\nexports[\"path-separator\"] = path_separator;\nexports[\"path-join\"] = path_join;\nexports[\"get-environment-variable\"] = get_environment_variable;\nexports.write = write;\nexports.exit = exit;\nexports.argv = argv;\nreturn exports;\n});\n\n",
    "if (typeof define !== 'function') { var define = require('amdefine')(module) }\ndefine('main',['require','reader','compiler','system'],function(require) {\nvar exports = {};\nvar reader = require(\"reader\");\nvar compiler = require(\"compiler\");\nvar system = require(\"system\");\nvar eval_print = function (form) {\n  var _id = (function () {\n    try {\n      return([true, compiler.eval(form)]);\n    }\n    catch (_e) {\n      return([false, _e.message, _e.stack]);\n    }\n  })();\n  var ok = _id[0];\n  var x = _id[1];\n  var trace = _id[2];\n  if (! ok) {\n    return(print(trace));\n  } else {\n    if (is63(x)) {\n      return(print(str(x)));\n    }\n  }\n};\nvar rep = function (s) {\n  return(eval_print(reader[\"read-string\"](s)));\n};\nvar repl = function () {\n  var buf = \"\";\n  var rep1 = function (s) {\n    buf = buf + s;\n    var more = [];\n    var form = reader[\"read-string\"](buf, more);\n    if (!( form === more)) {\n      eval_print(form);\n      buf = \"\";\n      return(system.write(\"> \"));\n    }\n  };\n  system.write(\"> \");\n  var _in = process.stdin;\n  _in.setEncoding(\"utf8\");\n  return(_in.on(\"data\", rep1));\n};\ncompile_file = function (path) {\n  var s = reader.stream(system[\"read-file\"](path));\n  var body = reader[\"read-all\"](s);\n  var form = compiler.expand(join([\"do\"], body));\n  return(compiler.compile(form, {_stash: true, stmt: true}));\n};\nload = function (path) {\n  return(compiler.run(compile_file(path)));\n};\nvar run_file = function (path) {\n  return(compiler.run(system[\"read-file\"](path)));\n};\nvar usage = function () {\n  print(\"usage: lumen [options] <object files>\");\n  print(\"options:\");\n  print(\"  -c <input>\\tCompile input file\");\n  print(\"  -o <output>\\tOutput file\");\n  print(\"  -t <target>\\tTarget language (default: lua)\");\n  print(\"  -e <expr>\\tExpression to evaluate\");\n  return(system.exit());\n};\nvar main = function () {\n  var arg = hd(system.argv);\n  if (arg === \"-h\" || arg === \"--help\") {\n    usage();\n  }\n  var pre = [];\n  var input = undefined;\n  var output = undefined;\n  var target1 = undefined;\n  var expr = undefined;\n  var argv = system.argv;\n  var n = _35(argv);\n  var i = 0;\n  while (i < n) {\n    var a = argv[i];\n    if (a === \"-c\" || a === \"-o\" || a === \"-t\" || a === \"-e\") {\n      if (i === n - 1) {\n        print(\"missing argument for \" + a);\n      } else {\n        i = i + 1;\n        var val = argv[i];\n        if (a === \"-c\") {\n          input = val;\n        } else {\n          if (a === \"-o\") {\n            output = val;\n          } else {\n            if (a === \"-t\") {\n              target1 = val;\n            } else {\n              if (a === \"-e\") {\n                expr = val;\n              }\n            }\n          }\n        }\n      }\n    } else {\n      if (!( \"-\" === char(a, 0))) {\n        add(pre, a);\n      }\n    }\n    i = i + 1;\n  }\n  var _x2 = pre;\n  var _n = _35(_x2);\n  var _i = 0;\n  while (_i < _n) {\n    var file = _x2[_i];\n    run_file(file);\n    _i = _i + 1;\n  }\n  if (nil63(input)) {\n    if (expr) {\n      return(rep(expr));\n    } else {\n      return(repl());\n    }\n  } else {\n    if (target1) {\n      target = target1;\n    }\n    var code = compile_file(input);\n    if (nil63(output) || output === \"-\") {\n      return(print(code));\n    } else {\n      return(system[\"write-file\"](output, code));\n    }\n  }\n};\nif (! browser63) {\n  main();\n}\nreturn exports;\n});\n\n"
  ]
}